version: '3.8'

services:
  db:
    image: postgres:13-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/var/lib/redis/data

  app:
    build:
      context: .
    restart: unless-stopped
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
      - ./data/web:/vol/web
    env_file:
      - .env
    depends_on:
      - db
      - redis
  
  celery_worker:
    build:
      context: .
    command: ["celery", "-A", "keibo", "worker", "--loglevel=info"]
    depends_on:
      - redis
      - db
    env_file:
      - .env

  celery_beat:
    build:
      context: .
    command: ["celery", "-A", "keibo", "beat", "-l", "info", "--scheduler", "django", "--loglevel=info"]
    depends_on:
      - redis
      - db
    env_file:
      - .env

volumes:
  postgres-data:
  redis-data: